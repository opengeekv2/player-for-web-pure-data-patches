name: qa

on:
  push:
    branches: [main]
  pull_request:

jobs:
  php:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allowed_to_fail }}
    strategy:
      matrix:
        php: ['7.2']
        allowed_to_fail: [false]
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          tools: cs2pr,composer:v1
      - if: ${{ matrix.php == '7.2' }}
        run: mkdir ./player-for-web-pure-data-patches
      - if: ${{ matrix.php == '7.2' }}
        run: cp -r * ./player-for-web-pure-data-patches
      - if: ${{ matrix.php == '7.2' }}
        run: git clone https://github.com/opengeekv2/player-for-web-pure-data-patches-dev-env.git
      - if: ${{ matrix.php == '7.2' }}
        run: mv ./player-for-web-pure-data-patches ./player-for-web-pure-data-patches-dev-env/public/wp-content/plugins/player-for-web-pure-data-patches
      - if: ${{ matrix.php == '7.2' }}  
        run: cd ./player-for-web-pure-data-patches-dev-env && composer install
      - if: ${{ matrix.php == '7.2' }}  
        run: ./player-for-web-pure-data-patches-dev-env/public/wp-content/plugins/player-for-web-pure-data-patches && composer install
      - if: ${{ matrix.php == '7.2' }}
        run: cd ./player-for-web-pure-data-patches-dev-env && phpstan analyze --error-format=checkstyle | cs2pr
      - if: ${{ matrix.php == '7.2' }}
        run: cd ./player-for-web-pure-data-patches-dev-env && psalm --stats --threads=$(nproc) --output-format=github --shepherd
      - if: ${{ matrix.php == '7.2' }}
        run: ./player-for-web-pure-data-patches-dev-env/public/wp-content/plugins/player-for-web-pure-data-patches && composer normalize --no-update-lock --dry-run --diff
      - if: ${{ matrix.php == '7.2' }}
        run: ./player-for-web-pure-data-patches-dev-env/public/wp-content/plugins/player-for-web-pure-data-patches && composer validate --strict
  node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['12.x']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
