name: qa

on:
  push:
    branches: [main]
  pull_request:

jobs:
  php:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allowed_to_fail }}
    strategy:
      matrix:
        php: ['5.6', '7.2']
        allowed_to_fail: [false]
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          tools: cs2pr,composer:v1
      - if: ${{ matrix.php == '5.6' }}
        run: composer global require --dev dealerdirect/phpcodesniffer-composer-installer:^0.6 phpcompatibility/phpcompatibility-wp:* wp-coding-standards/wpcs:* automattic/vipwpcs:* 
      - if: ${{ matrix.php == '5.6' }}
        run: phpcs --report=checkstyle -q . | cs2pr
      - if: ${{ matrix.php == '7.2' }}
        run: composer global require --dev phpstan/phpstan:0.12.47 szepeviktor/phpstan-wordpress:0.6.5 vimeo/psalm:3.16.0 humanmade/psalm-plugin-wordpress:1.0.1 ergebnis/composer-normalize:2.8.2
      - if: ${{ matrix.php == '7.2' }}
        run: composer install
      - if: ${{ matrix.php == '7.2' }}
        run: sed -i "s+vendor/szepeviktor/phpstan-wordpress/extension.neon+$HOME/\.composer/vendor/szepeviktor/phpstan-wordpress/extension.neon+g" phpstan.neon.dist
      - if: ${{ matrix.php == '7.2' }}
        run: phpstan analyze --error-format=checkstyle | cs2pr
      - if: ${{ matrix.php == '7.2' }}
        run: psalm --stats --threads=$(nproc) --output-format=github --shepherd
      - if: ${{ matrix.php == '7.2' }}
        run: composer normalize --no-update-lock --dry-run --diff
      - if: ${{ matrix.php == '7.2' }}
        run: composer validate --strict
  node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['12.x']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
